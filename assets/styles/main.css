/*! normalize.css v7.0.0 | MIT License | github.com/necolas/normalize.css */
/* Document
   ========================================================================== */
/**
 * 1. Correct the line height in all browsers.
 * 2. Prevent adjustments of font size after orientation changes in
 *    IE on Windows Phone and in iOS.
 */
html {
  line-height: 1.15;
  /* 1 */
  -ms-text-size-adjust: 100%;
  /* 2 */
  -webkit-text-size-adjust: 100%;
  /* 2 */ }

/* Sections
   ========================================================================== */
/**
 * Remove the margin in all browsers (opinionated).
 */
body {
  margin: 0; }

/**
 * Add the correct display in IE 9-.
 */
article,
aside,
footer,
header,
nav,
section {
  display: block; }

/**
 * Correct the font size and margin on `h1` elements within `section` and
 * `article` contexts in Chrome, Firefox, and Safari.
 */
h1 {
  font-size: 2em;
  margin: 0.67em 0; }

/* Grouping content
   ========================================================================== */
/**
 * Add the correct display in IE 9-.
 * 1. Add the correct display in IE.
 */
figcaption,
figure,
main {
  /* 1 */
  display: block; }

/**
 * Add the correct margin in IE 8.
 */
figure {
  margin: 1em 40px; }

/**
 * 1. Add the correct box sizing in Firefox.
 * 2. Show the overflow in Edge and IE.
 */
hr {
  box-sizing: content-box;
  /* 1 */
  height: 0;
  /* 1 */
  overflow: visible;
  /* 2 */ }

/**
 * 1. Correct the inheritance and scaling of font size in all browsers.
 * 2. Correct the odd `em` font sizing in all browsers.
 */
pre {
  font-family: monospace, monospace;
  /* 1 */
  font-size: 1em;
  /* 2 */ }

/* Text-level semantics
   ========================================================================== */
/**
 * 1. Remove the gray background on active links in IE 10.
 * 2. Remove gaps in links underline in iOS 8+ and Safari 8+.
 */
a {
  background-color: transparent;
  /* 1 */
  -webkit-text-decoration-skip: objects;
  /* 2 */ }

/**
 * 1. Remove the bottom border in Chrome 57- and Firefox 39-.
 * 2. Add the correct text decoration in Chrome, Edge, IE, Opera, and Safari.
 */
abbr[title] {
  border-bottom: none;
  /* 1 */
  text-decoration: underline;
  /* 2 */
  -webkit-text-decoration: underline dotted;
          text-decoration: underline dotted;
  /* 2 */ }

/**
 * Prevent the duplicate application of `bolder` by the next rule in Safari 6.
 */
b,
strong {
  font-weight: inherit; }

/**
 * Add the correct font weight in Chrome, Edge, and Safari.
 */
b,
strong {
  font-weight: bolder; }

/**
 * 1. Correct the inheritance and scaling of font size in all browsers.
 * 2. Correct the odd `em` font sizing in all browsers.
 */
code,
kbd,
samp {
  font-family: monospace, monospace;
  /* 1 */
  font-size: 1em;
  /* 2 */ }

/**
 * Add the correct font style in Android 4.3-.
 */
dfn {
  font-style: italic; }

/**
 * Add the correct background and color in IE 9-.
 */
mark {
  background-color: #ff0;
  color: #000; }

/**
 * Add the correct font size in all browsers.
 */
small {
  font-size: 80%; }

/**
 * Prevent `sub` and `sup` elements from affecting the line height in
 * all browsers.
 */
sub,
sup {
  font-size: 75%;
  line-height: 0;
  position: relative;
  vertical-align: baseline; }

sub {
  bottom: -0.25em; }

sup {
  top: -0.5em; }

/* Embedded content
   ========================================================================== */
/**
 * Add the correct display in IE 9-.
 */
audio,
video {
  display: inline-block; }

/**
 * Add the correct display in iOS 4-7.
 */
audio:not([controls]) {
  display: none;
  height: 0; }

/**
 * Remove the border on images inside links in IE 10-.
 */
img {
  border-style: none; }

/**
 * Hide the overflow in IE.
 */
svg:not(:root) {
  overflow: hidden; }

/* Forms
   ========================================================================== */
/**
 * 1. Change the font styles in all browsers (opinionated).
 * 2. Remove the margin in Firefox and Safari.
 */
button,
input,
optgroup,
select,
textarea {
  font-family: sans-serif;
  /* 1 */
  font-size: 100%;
  /* 1 */
  line-height: 1.15;
  /* 1 */
  margin: 0;
  /* 2 */ }

/**
 * Show the overflow in IE.
 * 1. Show the overflow in Edge.
 */
button,
input {
  /* 1 */
  overflow: visible; }

/**
 * Remove the inheritance of text transform in Edge, Firefox, and IE.
 * 1. Remove the inheritance of text transform in Firefox.
 */
button,
select {
  /* 1 */
  text-transform: none; }

/**
 * 1. Prevent a WebKit bug where (2) destroys native `audio` and `video`
 *    controls in Android 4.
 * 2. Correct the inability to style clickable types in iOS and Safari.
 */
button,
html [type="button"],
[type="reset"],
[type="submit"] {
  -webkit-appearance: button;
  /* 2 */ }

/**
 * Remove the inner border and padding in Firefox.
 */
button::-moz-focus-inner,
[type="button"]::-moz-focus-inner,
[type="reset"]::-moz-focus-inner,
[type="submit"]::-moz-focus-inner {
  border-style: none;
  padding: 0; }

/**
 * Restore the focus styles unset by the previous rule.
 */
button:-moz-focusring,
[type="button"]:-moz-focusring,
[type="reset"]:-moz-focusring,
[type="submit"]:-moz-focusring {
  outline: 1px dotted ButtonText; }

/**
 * Correct the padding in Firefox.
 */
fieldset {
  padding: 0.35em 0.75em 0.625em; }

/**
 * 1. Correct the text wrapping in Edge and IE.
 * 2. Correct the color inheritance from `fieldset` elements in IE.
 * 3. Remove the padding so developers are not caught out when they zero out
 *    `fieldset` elements in all browsers.
 */
legend {
  box-sizing: border-box;
  /* 1 */
  color: inherit;
  /* 2 */
  display: table;
  /* 1 */
  max-width: 100%;
  /* 1 */
  padding: 0;
  /* 3 */
  white-space: normal;
  /* 1 */ }

/**
 * 1. Add the correct display in IE 9-.
 * 2. Add the correct vertical alignment in Chrome, Firefox, and Opera.
 */
progress {
  display: inline-block;
  /* 1 */
  vertical-align: baseline;
  /* 2 */ }

/**
 * Remove the default vertical scrollbar in IE.
 */
textarea {
  overflow: auto; }

/**
 * 1. Add the correct box sizing in IE 10-.
 * 2. Remove the padding in IE 10-.
 */
[type="checkbox"],
[type="radio"] {
  box-sizing: border-box;
  /* 1 */
  padding: 0;
  /* 2 */ }

/**
 * Correct the cursor style of increment and decrement buttons in Chrome.
 */
[type="number"]::-webkit-inner-spin-button,
[type="number"]::-webkit-outer-spin-button {
  height: auto; }

/**
 * 1. Correct the odd appearance in Chrome and Safari.
 * 2. Correct the outline style in Safari.
 */
[type="search"] {
  -webkit-appearance: textfield;
  /* 1 */
  outline-offset: -2px;
  /* 2 */ }

/**
 * Remove the inner padding and cancel buttons in Chrome and Safari on macOS.
 */
[type="search"]::-webkit-search-cancel-button,
[type="search"]::-webkit-search-decoration {
  -webkit-appearance: none; }

/**
 * 1. Correct the inability to style clickable types in iOS and Safari.
 * 2. Change font properties to `inherit` in Safari.
 */
::-webkit-file-upload-button {
  -webkit-appearance: button;
  /* 1 */
  font: inherit;
  /* 2 */ }

/* Interactive
   ========================================================================== */
/*
 * Add the correct display in IE 9-.
 * 1. Add the correct display in Edge, IE, and Firefox.
 */
details,
menu {
  display: block; }

/*
 * Add the correct display in all browsers.
 */
summary {
  display: list-item; }

/* Scripting
   ========================================================================== */
/**
 * Add the correct display in IE 9-.
 */
canvas {
  display: inline-block; }

/**
 * Add the correct display in IE.
 */
template {
  display: none; }

/* Hidden
   ========================================================================== */
/**
 * Add the correct display in IE 10-.
 */
[hidden] {
  display: none; }

body {
  background-color: gray;
  background-position: center;
  background-repeat: no-repeat;
  background-size: cover;
  min-height: 100vh;
  color: #fff;
  /*right: 0;
    left: 0;
    bottom: 0;
    top: 0;*/ }

/* The switch - the box around the slider (label) */
.switch {
  display: inline-block;
  width: 30px;
  height: 17px;
  position: relative;
  /* Hide default HTML checkbox (label > input) */ }
  .switch input {
    display: none; }

/* The slider */
.slider {
  position: absolute;
  cursor: pointer;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  background-color: #ccc;
  transition: .4s; }
  .slider:before {
    position: absolute;
    content: "";
    height: 13px;
    width: 13px;
    left: 2px;
    bottom: 2px;
    background-color: white;
    transition: .4s; }

input:checked + .slider {
  background-color: #2196F3; }

input:focus + .slider {
  box-shadow: 0 0 1px #2196F3; }

input:checked + .slider:before {
  -webkit-transform: translateX(13px);
  transform: translateX(13px); }

/* Rounded sliders */
.slider.round {
  border-radius: 17px; }
  .slider.round:before {
    border-radius: 50%; }

.settings-dropup {
  width: 300px;
  background: black;
  background: rgba(0, 0, 0, 0.8); }
  .settings-dropup li a {
    color: #fff;
    opacity: 0.8; }
    .settings-dropup li a:hover {
      background-color: initial;
      color: #fff;
      opacity: 1; }

.settings-flex-container {
  display: flex;
  justify-content: space-between;
  align-items: center; }

h1,
h2,
h3,
p {
  font-family: 'Lato', sans-serif; }

#center {
  display: block;
  top: 50%;
  width: 100%;
  text-align: center; }
  #center h1#time {
    font-size: 1199%;
    font-weight: bold;
    margin-bottom: 0; }
  #center .format {
    position: absolute;
    left: 102%;
    bottom: 9%;
    font-size: 150%;
    opacity: 0; }
  #center h2 {
    font-size: 337.5%;
    font-weight: bold;
    line-height: 1;
    letter-spacing: 1px;
    margin-bottom: 30px; }

#center-box {
  display: block;
  top: 50%;
  left: 50%;
  width: 100%;
  text-align: center;
  margin-bottom: 50px; }
  #center-box h3 {
    font-size: 187.5%;
    font-weight: bold; }
  #center-box input {
    width: 450px;
    border-bottom-width: 2px;
    display: block;
    font-size: 337.5%;
    background: 0;
    border: 0;
    border-bottom: 3px solid #fff;
    color: #fff;
    font-weight: 500;
    outline: 0;
    margin: 0 auto;
    text-align: center; }

#center-below {
  display: block;
  top: 50%;
  left: 50%;
  width: 100%;
  text-align: center; }
  #center-below h3 {
    font-size: 187.5%;
    font-weight: inherit; }
  #center-below input {
    width: 450px;
    border-bottom-width: 2px;
    font-size: 187.5%;
    display: block;
    background: 0;
    border: 0;
    border-bottom: 3px solid #fff;
    color: #fff;
    font-weight: 500;
    outline: 0;
    margin: 0 auto;
    text-align: center; }

#todo {
  float: right;
  right: 0;
  position: relative; }

.dropdown-menu {
  background-color: #384047; }
  .dropdown-menu li a {
    color: #7b8b8e; }

.dropdown-toggle {
  cursor: pointer; }

#dropdown-menu-list {
  padding: 9px 15px 9px 15px; }
  #dropdown-menu-list li {
    font-size: 15px;
    padding: 5px 0 5px 0; }
    #dropdown-menu-list li a:hover {
      text-decoration: none;
      color: #edf0f1; }

.quote {
  border-left: 0;
  margin-top: 30px; }
  .quote #quotation::before {
    font-family: FontAwesome;
    content: "\f10d"; }

.tweet a, .tweet a:active, .tweet a:hover, .tweet a:visited {
  color: #fff;
  text-decoration: none; }

.tweet a:active, .tweet a:hover {
  color: #7b8b8e; }

.todo-container {
  position: relative;
  display: inline-block; }

.todo-pane {
  background: #384047;
  right: 3px;
  text-align: left;
  display: none;
  bottom: 50px;
  position: absolute;
  padding: 15px;
  z-index: 9999;
  left: -300px;
  border-radius: 5px; }
  .todo-pane input {
    height: 36px;
    width: 100%;
    padding: 6px 15px 7px;
    float: left;
    color: rgba(255, 255, 255, 0.75);
    font-size: 15px;
    text-indent: 18px;
    padding: 0 60px 0 0;
    margin-bottom: 25px;
    background: rgba(255, 255, 255, 0.2);
    border: 0;
    outline: none;
    border-radius: 5px 5px 5px 5px;
    box-shadow: none;
    -webkit-appearance: none;
    -moz-appearance: none; }
    .todo-pane input:-moz-placeholder {
      /* Firefox 18- */ }
    .todo-pane input::-moz-placeholder {
      /* Firefox 19+ */ }

.toggle {
  position: relative;
  top: 0;
  padding-right: 15px;
  right: 0;
  cursor: pointer; }

.container-todo-list {
  width: 100%;
  float: left;
  max-height: 350px;
  overflow: auto; }
  .container-todo-list ul.todo {
    width: 100%;
    float: left;
    padding: 0; }
    .container-todo-list ul.todo li {
      width: 100%;
      float: left;
      min-height: 30px;
      font-size: 15px;
      font-weight: #fff;
      color: #7b8b8e;
      line-height: 30px;
      list-style: none;
      background: #c9cfd4;
      position: relative;
      margin: 0 0 10px 0;
      padding: 0 100px 0 7px;
      word-break: break-word;
      border-radius: 5px;
      box-shadow: 0px 1px 2px rgba(44, 62, 80, 0.1); }
      .container-todo-list ul.todo li:nth-child(even) {
        background: #c9cfd4; }
      .container-todo-list ul.todo li:nth-child(odd) {
        background: #f9fafb; }
      .container-todo-list ul.todo li:last-of-type {
        margin: 0; }
      .container-todo-list ul.todo li .buttons {
        width: 50px;
        height: 7px;
        position: absolute;
        top: 0;
        right: 0;
        line-height: 30px;
        display: flex;
        justify-content: space-around; }
        .container-todo-list ul.todo li .buttons button {
          width: 50px;
          height: 7px;
          float: left;
          background: none;
          position: relative;
          border: 0px;
          box-shadow: none;
          outline: none;
          cursor: pointer;
          -webkit-appearance: none;
          -moz-appearance: none; }
          .container-todo-list ul.todo li .buttons button:last-of-type:before {
            content: '';
            width: 1px;
            height: 30px;
            background: #edf0f1;
            position: absolute;
            top: 10px;
            left: 0; }
          .container-todo-list ul.todo li .buttons button i {
            width: 21px;
            height: 21px;
            position: absolute;
            top: 0;
            left: 0;
            margin: -11px 0 0 -11px; }
          .container-todo-list ul.todo li .buttons button.complete i {
            border-radius: 11px;
            border: 1.5px solid #25b99a;
            transition: background 0.2s ease; }
    .container-todo-list ul.todo#completed li .buttons button.complete i {
      background: #25b99a;
      border: 0px; }
    .container-todo-list ul.todo:not(#completed) li .buttons button.complete:hover i {
      background: rgba(37, 185, 154, 0.75); }
      .container-todo-list ul.todo:not(#completed) li .buttons button.complete:hover i .fill {
        fill: #fff; }
    .container-todo-list ul.todo#completed li .buttons button.complete i .fill {
      fill: #fff; }
    .container-todo-list ul.todo li .buttons button i .fill {
      transition: fill 0.2s ease; }
    .container-todo-list ul.todo li .buttons button.remove i .fill {
      fill: #c0cecb; }
    .container-todo-list ul.todo li .buttons button.remove:hover i .fill {
      fill: #e85656; }
    .container-todo-list ul.todo li .buttons button.complete i .fill {
      fill: #25b99a; }
    .container-todo-list ul.todo#completed {
      position: relative;
      padding: 30px 0 0 0; }
      .container-todo-list ul.todo#completed::before {
        content: '';
        width: 150px;
        height: 1px;
        background: #d8e5e0;
        position: absolute;
        top: 15px;
        left: 50%;
        margin: 0 0 0 -75px; }
    .container-todo-list ul.todo#todoList:empty:after {
      content: 'Your to-do is empty!';
      margin: 15px 0 0 0; }
    .container-todo-list ul.todo#completed:empty:after {
      content: 'To-Do complete tasks.'; }
    .container-todo-list ul.todo#todoList:after, .container-todo-list ul.todo#completed:after {
      width: 100%;
      display: block;
      text-align: center;
      font-size: 12px;
      color: #7b8b8e; }
    .container-todo-list ul.todo .completed i:hover {
      cursor: pointer;
      color: #25b99a; }
    .container-todo-list ul.todo .remove i:hover {
      cursor: pointer;
      color: #ff0000; }

.cornerPadTop {
  padding-top: 20px;
  height: 70px; }

.item {
  padding-left: 10px; }

#weatherIcon {
  max-width: 25px;
  padding-top: 5px; }

#tempId {
  font-size: x-large; }

.degree {
  font-size: x-large; }

#cityId {
  text-transform: uppercase;
  letter-spacing: 1px;
  font-size: x-small; }

.flex-container {
  display: flex;
  flex-direction: row;
  justify-content: flex-end; }

.mainTop {
  min-height: 93vh;
  display: flex;
  flex-direction: column; }

#main-box {
  display: flex;
  flex: 1;
  flex-direction: row;
  align-items: center; }

#footer .row {
  max-height: 6vh; }

.v-adjust {
  display: flex;
  flex-direction: row; }
  .v-adjust [class^="col-"],
  .v-adjust [class*="col-"] {
    display: flex;
    align-items: center; }
  .v-adjust .col-sm-8 {
    justify-content: center; }

#bottom-left {
  margin-bottom: 3%; }

#bottom-right {
  justify-content: flex-end;
  margin-bottom: 3%; }

.focusBox {
  display: flex;
  justify-content: center;
  font-size: 187.5%; }

.focusItem {
  padding: 0px 20px; }

.strike {
  text-decoration: line-through; }

.focusCheckbox {
  cursor: hand;
  cursor: pointer; }
  .focusCheckbox:hover {
    color: #25b99a; }

.focusTrash {
  cursor: hand;
  cursor: pointer; }
  .focusTrash:hover {
    color: #e85656; }

/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
